1.MVVM：M是指model，数据模型，就是Vue实例里面的data部分。
        V是指view，模版页面，是页面中的内容。
        VM是指ViewModel，把model的数据与view绑定，监听View的变化，由创建的Vue实例来完成。
2.模版的理解：动态HTML，包含一些JS语法。双大括号表达式，指令（v-开头的自定义标签属性）。
  数据绑定v-bind:xxx 可以简写成 :xxx，可以把等于号里面的文本变成表达式。
  事件监听v-on:xxx 可以写成 @xxx。xxx()括号中可以传入data里面的数据。
3.input一般与v-model一起使用。
4.计算属性和侦听器：computer是计算属性，在页面中使用{{}}来显示计算结果。在computer中的属性
  使用方法来表示xxx() { return }，并且要有一个返回值，在相关数据发生变化/初始化的时候执行。
  与定义为method相比，计算属性只要相关数据不发生变化就不会重新调用，直接从缓存中取值，定义为
  方法的话无论如何都会重新调用。watch是侦听器，使用键值对的形式来表示，xxx:function(参数) {}，
  键是侦听的属性，值是一个侦听属性变化的时候调用的函数。也可以自定义侦听器。可以给计算属性中的
  属性添加set方法，实现双向绑定。set方法监听当前属性，如果发生变化则调用，更新相关数据。
5.Class绑定：使用v-bind来绑定，可以简写为:class="xxx"，xxx可以是字符串、对象或者数组。
6.Style绑定：使用v-bind来绑定，可以简写为:style="xxx"，xxx的格式是{fontSize: data属性 + 'px'}，
  CSS的属性名可以用驼峰命名法或者短横线命名法，由于属性的值是字符串，如果有单位请不要忘记。
7.条件渲染指令：v-if和v-else搭配使用，另外还有v-show，都是用来控制内容的显示和隐藏。如果频繁切换，
  建议使用v-show。
8.列表渲染：如果动态修改数组里面的值，比如persons里面存着三个对象，把其中一个对象动态修改了，视图
  并不会发生变化，原因是vue只监听了persons的改变，但是修改对象是persons内部的结构改变了,persons
  数组本身没有发生改变，所以视图不会更新。而调用splice方法删除一个数组内部对象（改变内部结构），但
  视图却更新的原因是，在vue中有一系列的数组变异方法，其中包括了splice，这些变异方法并不是原生的JS
  方法，而是经过vue封装过的方法，里面的操作首先是调用原生的方法进行数组内部更新操作，然后再更新界面。
  简单来说就是，vue中调用的splice方法是被vue经过处理的可以更新视图的方法。
9.列表渲染的搜索与排序：如果要对展示的数据进行过滤，那么要使用计算属性对原本的数组进行处理，涉及到了
  filter方法和indexOf方法。如果要对数据进行排序，则要对数组进行排序处理，用的是数组的sort方法，不过
  需要自己定于排序规则，否则就会按照ASCII码进行排序。sort((a, b) => { return a-b或者b-a })。如果
  要升序，a-b < 0 证明a比b小，返回a；如果要降序，b-a > 0 ，证明b比a大，返回b。
10.事件处理：在绑定监听的时候，如果不给事件传递参数，事件会有一个默认的参数$event，这个参数可以获取一
  些事件相关标签相关的信息。如果给事件传递了参数，就不能获取默认的参数$event，需要手动把它传入。使用
  事件修饰符，可以给事件添加一些动作，比如@click.stop可以停止事件的冒泡动作（对应JS的
  event.preventDefault()方法），@click.prevent可以阻止事件的默认行为（对应JS的event.stopPropagation()
  方法）。在监听键盘事件的时候，可以给事件添加按键修饰符，如@keyup.enter会在enter键按下被松开的时候被触发。
11.表单输入绑定：在form标签中使用@submit.prevent阻止事件的默认提交跳转行为。使用v-model进行表单输入项的绑
  定，单选项和多选项要使用value属性设置值。选择项中如果选项是用v-for进行渲染的，那么value要使用v-bind指令
  进行绑定。
12.生命周期函数：比较常用的是mounted和beforeDestory两个方法。mounted一般用来发送ajax请求，启动定时器等异步
  任务。beforeDestory用来做收尾工作，比如清除定时器。
13.过渡和动画：分为enter和leave过程，翻译为“显示“和”隐藏”比较容易理解。一般定义过渡时的样式和隐藏时的样式即
  可（enter和leave-to）。
14.过滤器：可以对数据进行处理再显示，{{xxx | 过滤器名字(参数)}}，过滤器定义Vue.filter(名字，回调函数(xxx，参数)))